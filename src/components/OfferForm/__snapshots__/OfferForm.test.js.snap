// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OfferForm component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OfferForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Offer Form
</h1>,
        <div
          className="input-wrapper"
>
          <h4>
                    Status:
          </h4>
          <select
                    name="status"
                    onChange={[Function]}
          >
                    <option
                              value="active"
                    >
                              active
                    </option>
                    <option
                              value="pending"
                    >
                              pending
                    </option>
                    <option
                              value="confirmed"
                    >
                              confirmed
                    </option>
          </select>
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Artist:
          </h4>
          <input
                    name="artist"
                    onChange={[Function]}
                    placeholder="artist"
                    type="text"
                    value=""
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Guarantee:
          </h4>
          <input
                    name="guarantee"
                    onChange={[Function]}
                    placeholder="guarantee"
                    type="number"
                    value={0}
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Bonuses:
          </h4>
          <input
                    name="bonuses"
                    onChange={[Function]}
                    placeholder="bonuses"
                    type="number"
                    value={0}
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Radius Clause:
          </h4>
          <input
                    name="radiusClause"
                    onChange={[Function]}
                    placeholder="Radius Clause"
                    type="text"
                    value=""
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Total Expenses:
          </h4>
          <input
                    name="totalExpenses"
                    onChange={[Function]}
                    placeholder="Total Expenses"
                    type="number"
                    value={0}
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Gross Potential:
          </h4>
          <input
                    name="grossPotential"
                    onChange={[Function]}
                    placeholder="Gross Potential"
                    type="number"
                    value={0}
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Door Times:
          </h4>
          <input
                    name="doorTimes"
                    onChange={[Function]}
                    placeholder="Door Times"
                    type="number"
                    value={0}
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Age Range:
          </h4>
          <input
                    name="ageRange"
                    onChange={[Function]}
                    placeholder="Age Range"
                    type="numer"
                    value={0}
          />
</div>,
        <div
          className="input-wrapper"
>
          <h4>
                    Merch Split:
          </h4>
          <input
                    name="merchSplit"
                    onChange={[Function]}
                    placeholder="Merch Split"
                    type="text"
                    value=""
          />
</div>,
      ],
      "className": "offer-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Offer Form",
        },
        "ref": null,
        "rendered": "Offer Form",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Status:
</h4>,
            <select
              name="status"
              onChange={[Function]}
>
              <option
                            value="active"
              >
                            active
              </option>
              <option
                            value="pending"
              >
                            pending
              </option>
              <option
                            value="confirmed"
              >
                            confirmed
              </option>
</select>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Status:",
            },
            "ref": null,
            "rendered": "Status:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="active"
>
                  active
</option>,
                <option
                  value="pending"
>
                  pending
</option>,
                <option
                  value="confirmed"
>
                  confirmed
</option>,
              ],
              "name": "status",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "active",
                  "value": "active",
                },
                "ref": null,
                "rendered": "active",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "pending",
                  "value": "pending",
                },
                "ref": null,
                "rendered": "pending",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "confirmed",
                  "value": "confirmed",
                },
                "ref": null,
                "rendered": "confirmed",
                "type": "option",
              },
            ],
            "type": "select",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Artist:
</h4>,
            <input
              name="artist"
              onChange={[Function]}
              placeholder="artist"
              type="text"
              value=""
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Artist:",
            },
            "ref": null,
            "rendered": "Artist:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "artist",
              "onChange": [Function],
              "placeholder": "artist",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Guarantee:
</h4>,
            <input
              name="guarantee"
              onChange={[Function]}
              placeholder="guarantee"
              type="number"
              value={0}
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Guarantee:",
            },
            "ref": null,
            "rendered": "Guarantee:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "guarantee",
              "onChange": [Function],
              "placeholder": "guarantee",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Bonuses:
</h4>,
            <input
              name="bonuses"
              onChange={[Function]}
              placeholder="bonuses"
              type="number"
              value={0}
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Bonuses:",
            },
            "ref": null,
            "rendered": "Bonuses:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "bonuses",
              "onChange": [Function],
              "placeholder": "bonuses",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Radius Clause:
</h4>,
            <input
              name="radiusClause"
              onChange={[Function]}
              placeholder="Radius Clause"
              type="text"
              value=""
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Radius Clause:",
            },
            "ref": null,
            "rendered": "Radius Clause:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "radiusClause",
              "onChange": [Function],
              "placeholder": "Radius Clause",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Total Expenses:
</h4>,
            <input
              name="totalExpenses"
              onChange={[Function]}
              placeholder="Total Expenses"
              type="number"
              value={0}
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Total Expenses:",
            },
            "ref": null,
            "rendered": "Total Expenses:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "totalExpenses",
              "onChange": [Function],
              "placeholder": "Total Expenses",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Gross Potential:
</h4>,
            <input
              name="grossPotential"
              onChange={[Function]}
              placeholder="Gross Potential"
              type="number"
              value={0}
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Gross Potential:",
            },
            "ref": null,
            "rendered": "Gross Potential:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "grossPotential",
              "onChange": [Function],
              "placeholder": "Gross Potential",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Door Times:
</h4>,
            <input
              name="doorTimes"
              onChange={[Function]}
              placeholder="Door Times"
              type="number"
              value={0}
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Door Times:",
            },
            "ref": null,
            "rendered": "Door Times:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "doorTimes",
              "onChange": [Function],
              "placeholder": "Door Times",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Age Range:
</h4>,
            <input
              name="ageRange"
              onChange={[Function]}
              placeholder="Age Range"
              type="numer"
              value={0}
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Age Range:",
            },
            "ref": null,
            "rendered": "Age Range:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "ageRange",
              "onChange": [Function],
              "placeholder": "Age Range",
              "type": "numer",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Merch Split:
</h4>,
            <input
              name="merchSplit"
              onChange={[Function]}
              placeholder="Merch Split"
              type="text"
              value=""
/>,
          ],
          "className": "input-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Merch Split:",
            },
            "ref": null,
            "rendered": "Merch Split:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "merchSplit",
              "onChange": [Function],
              "placeholder": "Merch Split",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Offer Form
</h1>,
          <div
            className="input-wrapper"
>
            <h4>
                        Status:
            </h4>
            <select
                        name="status"
                        onChange={[Function]}
            >
                        <option
                                    value="active"
                        >
                                    active
                        </option>
                        <option
                                    value="pending"
                        >
                                    pending
                        </option>
                        <option
                                    value="confirmed"
                        >
                                    confirmed
                        </option>
            </select>
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Artist:
            </h4>
            <input
                        name="artist"
                        onChange={[Function]}
                        placeholder="artist"
                        type="text"
                        value=""
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Guarantee:
            </h4>
            <input
                        name="guarantee"
                        onChange={[Function]}
                        placeholder="guarantee"
                        type="number"
                        value={0}
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Bonuses:
            </h4>
            <input
                        name="bonuses"
                        onChange={[Function]}
                        placeholder="bonuses"
                        type="number"
                        value={0}
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Radius Clause:
            </h4>
            <input
                        name="radiusClause"
                        onChange={[Function]}
                        placeholder="Radius Clause"
                        type="text"
                        value=""
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Total Expenses:
            </h4>
            <input
                        name="totalExpenses"
                        onChange={[Function]}
                        placeholder="Total Expenses"
                        type="number"
                        value={0}
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Gross Potential:
            </h4>
            <input
                        name="grossPotential"
                        onChange={[Function]}
                        placeholder="Gross Potential"
                        type="number"
                        value={0}
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Door Times:
            </h4>
            <input
                        name="doorTimes"
                        onChange={[Function]}
                        placeholder="Door Times"
                        type="number"
                        value={0}
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Age Range:
            </h4>
            <input
                        name="ageRange"
                        onChange={[Function]}
                        placeholder="Age Range"
                        type="numer"
                        value={0}
            />
</div>,
          <div
            className="input-wrapper"
>
            <h4>
                        Merch Split:
            </h4>
            <input
                        name="merchSplit"
                        onChange={[Function]}
                        placeholder="Merch Split"
                        type="text"
                        value=""
            />
</div>,
        ],
        "className": "offer-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Offer Form",
          },
          "ref": null,
          "rendered": "Offer Form",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Status:
</h4>,
              <select
                name="status"
                onChange={[Function]}
>
                <option
                                value="active"
                >
                                active
                </option>
                <option
                                value="pending"
                >
                                pending
                </option>
                <option
                                value="confirmed"
                >
                                confirmed
                </option>
</select>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Status:",
              },
              "ref": null,
              "rendered": "Status:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="active"
>
                    active
</option>,
                  <option
                    value="pending"
>
                    pending
</option>,
                  <option
                    value="confirmed"
>
                    confirmed
</option>,
                ],
                "name": "status",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "active",
                    "value": "active",
                  },
                  "ref": null,
                  "rendered": "active",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "pending",
                    "value": "pending",
                  },
                  "ref": null,
                  "rendered": "pending",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "confirmed",
                    "value": "confirmed",
                  },
                  "ref": null,
                  "rendered": "confirmed",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Artist:
</h4>,
              <input
                name="artist"
                onChange={[Function]}
                placeholder="artist"
                type="text"
                value=""
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Artist:",
              },
              "ref": null,
              "rendered": "Artist:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "artist",
                "onChange": [Function],
                "placeholder": "artist",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Guarantee:
</h4>,
              <input
                name="guarantee"
                onChange={[Function]}
                placeholder="guarantee"
                type="number"
                value={0}
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Guarantee:",
              },
              "ref": null,
              "rendered": "Guarantee:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "guarantee",
                "onChange": [Function],
                "placeholder": "guarantee",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Bonuses:
</h4>,
              <input
                name="bonuses"
                onChange={[Function]}
                placeholder="bonuses"
                type="number"
                value={0}
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Bonuses:",
              },
              "ref": null,
              "rendered": "Bonuses:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "bonuses",
                "onChange": [Function],
                "placeholder": "bonuses",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Radius Clause:
</h4>,
              <input
                name="radiusClause"
                onChange={[Function]}
                placeholder="Radius Clause"
                type="text"
                value=""
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Radius Clause:",
              },
              "ref": null,
              "rendered": "Radius Clause:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "radiusClause",
                "onChange": [Function],
                "placeholder": "Radius Clause",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Total Expenses:
</h4>,
              <input
                name="totalExpenses"
                onChange={[Function]}
                placeholder="Total Expenses"
                type="number"
                value={0}
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Total Expenses:",
              },
              "ref": null,
              "rendered": "Total Expenses:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "totalExpenses",
                "onChange": [Function],
                "placeholder": "Total Expenses",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Gross Potential:
</h4>,
              <input
                name="grossPotential"
                onChange={[Function]}
                placeholder="Gross Potential"
                type="number"
                value={0}
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Gross Potential:",
              },
              "ref": null,
              "rendered": "Gross Potential:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "grossPotential",
                "onChange": [Function],
                "placeholder": "Gross Potential",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Door Times:
</h4>,
              <input
                name="doorTimes"
                onChange={[Function]}
                placeholder="Door Times"
                type="number"
                value={0}
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Door Times:",
              },
              "ref": null,
              "rendered": "Door Times:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "doorTimes",
                "onChange": [Function],
                "placeholder": "Door Times",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Age Range:
</h4>,
              <input
                name="ageRange"
                onChange={[Function]}
                placeholder="Age Range"
                type="numer"
                value={0}
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Age Range:",
              },
              "ref": null,
              "rendered": "Age Range:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "ageRange",
                "onChange": [Function],
                "placeholder": "Age Range",
                "type": "numer",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4>
                Merch Split:
</h4>,
              <input
                name="merchSplit"
                onChange={[Function]}
                placeholder="Merch Split"
                type="text"
                value=""
/>,
            ],
            "className": "input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Merch Split:",
              },
              "ref": null,
              "rendered": "Merch Split:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "merchSplit",
                "onChange": [Function],
                "placeholder": "Merch Split",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
