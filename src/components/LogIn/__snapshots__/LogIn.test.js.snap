// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LogIn component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LogIn
    closeLogInModal={[Function]}
    history={
        Object {
            "action": "PUSH",
            "length": 50,
            "location": Object {
              "hash": "",
              "key": "hvocjm",
              "pathname": "/home",
              "search": "",
            },
          }
    }
    logInUser={[Function]}
    populateUserOffers={[Function]}
    populateUserWatchlist={[Function]}
    setUserVenue={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Unknown>
        <i
                className="fas fa-times-circle"
                onClick={[Function]}
        />
        <div
                className="top-container"
        >
                <div
                        className="top-inner"
                >
                        <h3
                                className="header-text"
                        >
                                Welcome to Talent Buyer!
                        </h3>
                </div>
        </div>
        <p>
                Log In With Email
        </p>
        <form
                className="login-form"
                onSubmit={[Function]}
        >
                <Unknown
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="email"
                        value=""
                />
                <Unknown
                        name="password"
                        onChange={[Function]}
                        placeholder="password"
                        type="password"
                        value=""
                />
                <Unknown>
                        Submit
                </Unknown>
        </form>
        <Unknown
                onClick={[Function]}
        >
                Not a member? Sign up now
        </Unknown>
</Unknown>,
      "className": "log-in",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <i
            className="fas fa-times-circle"
            onClick={[Function]}
/>,
          <div
            className="top-container"
>
            <div
                        className="top-inner"
            >
                        <h3
                                    className="header-text"
                        >
                                    Welcome to Talent Buyer!
                        </h3>
            </div>
</div>,
          <p>
            Log In With Email
</p>,
          <form
            className="login-form"
            onSubmit={[Function]}
>
            <Unknown
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="email"
                        value=""
            />
            <Unknown
                        name="password"
                        onChange={[Function]}
                        placeholder="password"
                        type="password"
                        value=""
            />
            <Unknown>
                        Submit
            </Unknown>
</form>,
          <Unknown
            onClick={[Function]}
>
            Not a member? Sign up now
</Unknown>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-times-circle",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="top-inner"
>
              <h3
                            className="header-text"
              >
                            Welcome to Talent Buyer!
              </h3>
</div>,
            "className": "top-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h3
                className="header-text"
>
                Welcome to Talent Buyer!
</h3>,
              "className": "top-inner",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to Talent Buyer!",
                "className": "header-text",
              },
              "ref": null,
              "rendered": "Welcome to Talent Buyer!",
              "type": "h3",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Log In With Email",
          },
          "ref": null,
          "rendered": "Log In With Email",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown
                name="email"
                onChange={[Function]}
                placeholder="email"
                type="email"
                value=""
/>,
              <Unknown
                name="password"
                onChange={[Function]}
                placeholder="password"
                type="password"
                value=""
/>,
              <Unknown>
                Submit
</Unknown>,
            ],
            "className": "login-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "placeholder": "email",
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "rules": Array [
                    "
  width: 80%;
  outline: none;
  border: none;
  margin-top: 10px;
  padding: 5px 10px;
  font-size: 1.2rem;
  background-color: rgba(250, 250, 250, 0.3);
  color: #fff;
  border-radius: 5px;
",
                  ],
                },
                "displayName": "styled.input",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "placeholder": "password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "rules": Array [
                    "
  width: 80%;
  outline: none;
  border: none;
  margin-top: 10px;
  padding: 5px 10px;
  font-size: 1.2rem;
  background-color: rgba(250, 250, 250, 0.3);
  color: #fff;
  border-radius: 5px;
",
                  ],
                },
                "displayName": "styled.input",
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": true,
                  "rules": Array [
                    "
  width: 40%;
  padding: 10px 20px;
  margin-top: 2rem;
  border: none;
  border-radius: 5px;
  font-size: 1.2rem;
  background-color: #d52f7f;
  color: #fff;
  cursor: pointer;
  -webkit-box-shadow: 10px 10px 57px -16px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: 10px 10px 57px -16px rgba(0, 0, 0, 0.75);
  box-shadow: 10px 10px 57px -16px rgba(0, 0, 0, 0.75);
",
                  ],
                },
                "displayName": "styled.button",
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Not a member? Sign up now",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Not a member? Sign up now",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "rules": Array [
                "
  color: #868994;
  cursor: pointer;
  margin: 1.5rem 0;
",
              ],
            },
            "displayName": "styled.p",
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "p",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": true,
          "rules": Array [
            "
  margin-top: 3rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  width: 30rem;
  background-color: #21222b;
  border-radius: 10px;
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Unknown>
          <i
                    className="fas fa-times-circle"
                    onClick={[Function]}
          />
          <div
                    className="top-container"
          >
                    <div
                              className="top-inner"
                    >
                              <h3
                                        className="header-text"
                              >
                                        Welcome to Talent Buyer!
                              </h3>
                    </div>
          </div>
          <p>
                    Log In With Email
          </p>
          <form
                    className="login-form"
                    onSubmit={[Function]}
          >
                    <Unknown
                              name="email"
                              onChange={[Function]}
                              placeholder="email"
                              type="email"
                              value=""
                    />
                    <Unknown
                              name="password"
                              onChange={[Function]}
                              placeholder="password"
                              type="password"
                              value=""
                    />
                    <Unknown>
                              Submit
                    </Unknown>
          </form>
          <Unknown
                    onClick={[Function]}
          >
                    Not a member? Sign up now
          </Unknown>
</Unknown>,
        "className": "log-in",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <i
              className="fas fa-times-circle"
              onClick={[Function]}
/>,
            <div
              className="top-container"
>
              <div
                            className="top-inner"
              >
                            <h3
                                          className="header-text"
                            >
                                          Welcome to Talent Buyer!
                            </h3>
              </div>
</div>,
            <p>
              Log In With Email
</p>,
            <form
              className="login-form"
              onSubmit={[Function]}
>
              <Unknown
                            name="email"
                            onChange={[Function]}
                            placeholder="email"
                            type="email"
                            value=""
              />
              <Unknown
                            name="password"
                            onChange={[Function]}
                            placeholder="password"
                            type="password"
                            value=""
              />
              <Unknown>
                            Submit
              </Unknown>
</form>,
            <Unknown
              onClick={[Function]}
>
              Not a member? Sign up now
</Unknown>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-times-circle",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="top-inner"
>
                <h3
                                className="header-text"
                >
                                Welcome to Talent Buyer!
                </h3>
</div>,
              "className": "top-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h3
                  className="header-text"
>
                  Welcome to Talent Buyer!
</h3>,
                "className": "top-inner",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Welcome to Talent Buyer!",
                  "className": "header-text",
                },
                "ref": null,
                "rendered": "Welcome to Talent Buyer!",
                "type": "h3",
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Log In With Email",
            },
            "ref": null,
            "rendered": "Log In With Email",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Unknown
                  name="email"
                  onChange={[Function]}
                  placeholder="email"
                  type="email"
                  value=""
/>,
                <Unknown
                  name="password"
                  onChange={[Function]}
                  placeholder="password"
                  type="password"
                  value=""
/>,
                <Unknown>
                  Submit
</Unknown>,
              ],
              "className": "login-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "placeholder": "email",
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": true,
                    "rules": Array [
                      "
  width: 80%;
  outline: none;
  border: none;
  margin-top: 10px;
  padding: 5px 10px;
  font-size: 1.2rem;
  background-color: rgba(250, 250, 250, 0.3);
  color: #fff;
  border-radius: 5px;
",
                    ],
                  },
                  "displayName": "styled.input",
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "name": "password",
                  "onChange": [Function],
                  "placeholder": "password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": true,
                    "rules": Array [
                      "
  width: 80%;
  outline: none;
  border: none;
  margin-top: 10px;
  padding: 5px 10px;
  font-size: 1.2rem;
  background-color: rgba(250, 250, 250, 0.3);
  color: #fff;
  border-radius: 5px;
",
                    ],
                  },
                  "displayName": "styled.input",
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": true,
                    "rules": Array [
                      "
  width: 40%;
  padding: 10px 20px;
  margin-top: 2rem;
  border: none;
  border-radius: 5px;
  font-size: 1.2rem;
  background-color: #d52f7f;
  color: #fff;
  cursor: pointer;
  -webkit-box-shadow: 10px 10px 57px -16px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: 10px 10px 57px -16px rgba(0, 0, 0, 0.75);
  box-shadow: 10px 10px 57px -16px rgba(0, 0, 0, 0.75);
",
                    ],
                  },
                  "displayName": "styled.button",
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Not a member? Sign up now",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Not a member? Sign up now",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": true,
                "rules": Array [
                  "
  color: #868994;
  cursor: pointer;
  margin: 1.5rem 0;
",
                ],
              },
              "displayName": "styled.p",
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "p",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  margin-top: 3rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  width: 30rem;
  background-color: #21222b;
  border-radius: 10px;
",
            ],
          },
          "displayName": "styled.div",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
